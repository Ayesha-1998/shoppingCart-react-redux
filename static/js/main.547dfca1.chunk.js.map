{"version":3,"sources":["components/Products.js","actions/index.js","components/Cart.js","components/App.js","reducers/index.js","index.js"],"names":["connect","state","products","addProduct","id","product","unit","type","payload","props","className","map","src","img","alt","name","width","price","onClick","cart","sum","key","App","Products","combineReducers","action","existingProduct","filter","p","length","withoutExisting","updatedUnitsProduct","store","createStore","reducers","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.547dfca1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addProduct } from \"../actions\";\r\n\r\nconst Products = (props) => {\r\n  const unit = 1;\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        {props.products.map((product) => (\r\n          <div className=\"col-lg-3 col-md-6 text-center\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <img src={product.img} alt={product.name} width=\"200px\" />\r\n                <h3>{product.name}</h3>\r\n                <h5>{product.price}</h5>\r\n                <button\r\n                  className=\"btn btn-info\"\r\n                  onClick={() => props.addProduct(product.id, product, unit)}\r\n                >\r\n                  Add\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: state.products,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { addProduct })(Products);\r\n","//creating an action creator\r\n\r\nexport const addProduct = (id, product, unit) => {\r\n    return {\r\n      type: \"ADD_PRODUCT\",\r\n      payload: {\r\n        id: id,\r\n        product: product,\r\n        unit: unit,\r\n      },\r\n    };\r\n  };\r\n  ","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Cart = (props) => {\r\n  let sum = 0;\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <h1>Cart</h1>\r\n        <div className=\"col-lg-12\">\r\n          {props.cart.map((product) => (\r\n            <div>\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"card\" key={product.id}>\r\n                  <div className=\"card-body\">\r\n                    <img src={product.product.img} alt=\"product\" width=\"20px\" />\r\n                    {product.product.name} {product.product.price} *\r\n                    {product.unit}={product.product.price * product.unit}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div>Total: {(sum += product.product.price * product.unit)}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.cart,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Cart);\r\n","import React from \"react\";\r\nimport Products from \"./Products\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Cart from \"./Cart\";\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Cart />\r\n      <Products />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\n//state\r\nconst Products = [\r\n  {\r\n    id: 1,\r\n    name: \"Robo 1\",\r\n    price: 100,\r\n    img: \"https://robohash.org/1?set=set3\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Robo 2\",\r\n    price: 1000,\r\n    img: \"https://robohash.org/2?set=set3\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Robo 3\",\r\n    price: 1020,\r\n    img: \"https://robohash.org/3?set=set3\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Robo 4\",\r\n    price: 1000,\r\n    img: \"https://robohash.org/4?set=set3\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Robo\",\r\n    price: 100,\r\n    img: \"https://robohash.org/1?set=set2\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Robooo\",\r\n    price: 1000,\r\n    img: \"https://robohash.org/2?set=set2\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Roboooooo\",\r\n    price: 100,\r\n    img: \"https://robohash.org/3?set=set2\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Roboooooooooooo\",\r\n    price: 1000,\r\n    img: \"https://robohash.org/4?set=set2\",\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"kitty robo 1\",\r\n    price: 100,\r\n    img: \"https://robohash.org/4?set=set4\",\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"kitty robo 2\",\r\n    price: 1000,\r\n    img: \"https://robohash.org/5?set=set4\",\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"kitty robo 3\",\r\n    price: 100,\r\n    img: \"https://robohash.org/6?set=set4\",\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"kitty robo 4\",\r\n    price: 10002,\r\n    img: \"https://robohash.org/7?set=set4\",\r\n  },\r\n];\r\n\r\n//reducer to show product\r\n\r\nconst showProduct = (state = Products) => {\r\n  return state;\r\n};\r\n\r\n//reducer to add product to the cart\r\n\r\nconst cartReducer = (state = [], action) => {\r\n  if (action.type === \"ADD_PRODUCT\") {\r\n    //if product exist in our cart\r\n    const existingProduct = state.filter((p) => p.id === action.payload.id);\r\n    if (existingProduct.length > 0) {\r\n      //product not existing in cart\r\n      const withoutExisting = state.filter((p) => p.id !== action.payload.id);\r\n      //if product already exist we need to increase the units of product\r\n      const updatedUnitsProduct = {\r\n        ...existingProduct[0],\r\n        unit: existingProduct[0].unit + action.payload.unit,\r\n      };\r\n      //add product in cart with units increased\r\n      return [...withoutExisting, updatedUnitsProduct];\r\n    } else {\r\n      // if product is not there in cart\r\n      return [...state, action.payload];\r\n    }\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default combineReducers({\r\n  cart: cartReducer,\r\n  products: showProduct,\r\n});\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport reducers from './reducers';\r\nimport {createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\n\r\nlet store=createStore(reducers);\r\n\r\n\r\nReactDom.render(\r\n    <Provider store={store}>\r\n         <App />\r\n    </Provider>, document.querySelector(\"#root\")\r\n    );\r\n"],"sourceRoot":""}